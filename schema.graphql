type User {
  id: ID!
  name: String!
  email: String
  username: String
  issues: [Issue!]!
}

type Issue {
  id: ID!
  description: String!
  assignee: User
}

interface Integration {
  driver: String!
  serverAddress: String!
  name: String!
}

type MatterMostIntegration implements Integration {
  driver: String!
  serverAddress: String!
  name: String!
}

type ServerConfig {
  integrations: [Integration!]
}

type Query {
  issues: [Issue!]!
  users: [User!]!
  config: ServerConfig!
}

input NewIssue {
  description: String!
  userId: String
}

input NewUser {
  name: String!
  email: String
  username: String
}

input AssignIssue {
  issueId: String!
  userId: String!
}

input EditIssue {
  issueId: String!
  description: String!
}

type Mutation {
  createIssue(input: NewIssue!): Issue!
  createUser(input: NewUser!): User!
  assignIssue(input: AssignIssue!): Issue!
  unassignIssue(input: String!): Issue!
  updateIssue(input: EditIssue): Issue!
}
